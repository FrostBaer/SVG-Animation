:root {
  --cubeColor: #f3d3e170;
  --rotateSpeed: 30s;
  --bounceSpeed: 1.2s;
}

body {
  background-color: #000;
  background-image: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0),
      rgb(0, 0, 0, 1)
    ),
    url(mick-haupt-unsplash.jpg);
  background-size:contain;
  min-height: 100vh;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 75px;
  perspective: 10em;
  perspective-origin: 50% calc(50% - 2em);
}

.scene {
  position: relative;
  transform-style: preserve-3d;
  /* animation: rotateScene var(--rotateSpeed) infinite linear; */
}

/* @keyframes rotateScene {
  to {
    transform: rotateY(360deg);
  }
} */

.ball {
  transform-style: inherit; /*needed for perspective to work*/
  width: 1em;
  height: 1em;
  border-radius: 50%;
  /* background-color: lightblue; */

  position: absolute;
  left: -0.5em;
  bottom: 1em;
  /* background-image: radial-gradient(circle at top, lightpink, 40%, #000); */
  background: radial-gradient(circle at top, rgba(255, 255, 255, 0.5), rgba(0, 0, 0, 0.7) 100%), 
  url(chrome-gold.jpg) center/cover;

  animation: ballBounce var(--bounceSpeed) infinite ease-out;
  /*the ball in reality is a 2D shape, 
    we counter the rotation of the scene, 
    so it always faces the camera*/
  /* rotateScene var(--rotateSpeed) infinite linear reverse; */
}

@keyframes ballBounce {
  0%,
  100% {
    bottom: 0.5em;
    animation-timing-function: cubic-bezier(0.5, 1, 0.89, 1);
  }
  50% {
    bottom: 3em;
    animation-timing-function: cubic-bezier(0.11, 0, 0.5, 0);
  }
}

.ballShadow {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(#0008, #0000 50%);
  animation: ballShadow var(--bounceSpeed) infinite ease-out;
}

@keyframes ballShadow {
  10%,
  95% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(2);
    opacity: 0.7;
    animation-timing-function: cubic-bezier(0.11, 0, 0.5, 0);
  }
}

.cube {
  transform-style: inherit; /*needed for perspective to work*/
  width: 2em;
  height: 2em;

  position: absolute;
  bottom: -1em;
  left: -1em;
  animation: cubeHeight var(--bounceSpeed) infinite linear,
    rotateCube var(--rotateSpeed) infinite linear;

  .front,
  .back,
  .left,
  .right {
    position: absolute;
    width: 100%;
    height: 100%;
    background: var(--cubeColor);
    box-shadow: 0 0 0.5em #000a inset;
  }

  /*position the sides of the cube*/
  .front {
    transform: translateZ(1em);
  }
  .right {
    transform: rotateY(90deg) translateZ(1em);
  }
  .back {
    transform: rotateY(180deg) translateZ(1em);
  }
  .left {
    transform: rotateY(270deg) translateZ(1em);
  }

  .top {
    position: absolute;
    width: 2em;
    height: 2em;
    background: var(--cubeColor);
    transform: translateY(-50%) rotateX(90deg);
    box-shadow: 0 0 0.5em #000a inset;
  }
  .bottom {
    position: absolute;
    width: 2em;
    height: 2em;
    background: #0007;
    bottom: 0;
    transform: translateY(50%) rotateX(90deg);
    /*cast shadows outwards*/
    box-shadow: 0 0 0.7em #000;
  }
}

@keyframes cubeHeight {
  0%,
  100% {
    height: 1.5em;
    animation-timing-function: cubic-bezier(0.5, 1, 0.89, 1);
  }
  10%,
  95% {
    height: 2em;
    animation-timing-function: cubic-bezier(0.11, 0, 0.5, 0);
  }
}

@keyframes rotateCube {
  to {
    transform: rotateY(360deg);
  }
}

.floor {
  width: 25em;
  height: 15em;
  background-image: 
    /*cast shadow*/ radial-gradient(#0000, #31302e 75%),
    /*pattern*/
      repeating-conic-gradient(
        from 45deg,
        #b19e91 0deg 90deg,
        #d3c9c9 90deg 180deg
      );
  background-size: 100%, 1em 1em;

  position: absolute;
  top: 1em;
  transform: translate(-50%, -50%) rotateX(90deg);
}
